

    js 两种数据类型：基本类型  引用 类型
	
	内存分为：  栈内存  堆内存 
	
	基本类型  存储在栈内存中，当基本类型的变量作用域结束，
它所占用的内存会立即释放。

   对象的引用 也存在栈内存中
   
   对象存在堆内存里 
   
   var  o=new Object();
   
   new Object();  存储在堆的  x000
   
   var o2=o;
   
   o  存储 在栈里 它的值是 x000,o是对象，同时也是变量
   作用域结果后，它的值会被释放 
   
   
   o2 没有结束  
   
   
   没有任何变量或对象引用 new Object()时  ，x000所对应的
   内存数据  被当成垃圾回收  
   
   如：有作用域链  scope=[];
   假如有函数：  function f(){}
   
   1、调用 函数 f() 
      
	  创建新的对象 var o=new Object();
	  保存f里的局部变量 
	  
	2、把对象o  添加到作用域链上  
	   scope.push(o);
	   
	3、当函数执行完   
	
	   正常情况： scope.pop();  
	   
	   假如有对象o2=o
	   f(){
		   //嵌套函数
		   f2(){}
		   
		   //外部引用  
		   f2();
		  
		  return f2; 
	   }
	   
	   f2----作用域链 scope2=[]----变量绑定对象 
	   
	   var tmp=f();
	   //对象tmp 指向f2  
	   tmp();
	   
	   
	   问题：
	    1、什么闭包？
		为什么用闭包？
		3闭包的实现方式 
		4、为什么闭包内可以访问外部函数变量 
		
		